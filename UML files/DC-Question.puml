@startuml

skinparam monochrome true
hide circle
skinparam classAttributeIconSize 0

title: diagram of classes that interact with Question

class Question{
-theme: String
-options: List<Answer>
-content: String
-type: Type
-numberOfCorrectAnswers: int
+Question(content: String, type: Type, answers: List<Answer>, theme: String)
+getNumberOfCorrectAnswers(): int
+assignScore(playersAnswers: HashMap<Player, ArrayList<Answer>>)
+choiceOption(chosenOptions: String): ArrayList<Answer>
}

class Answer{
+content: String
+correction: Correction
+score: int
-id: char
+Answer(content: String, correction: String, score: int, id: char)
+getCorrection(): Correction
+getContent(): String
+getScore(): int
+getId(): char
+equals(char searchedId): boolean
}

abstract class Correction{
-correction: String
+Correction(correction: String)
+setCorrection(correction: String)
+getCorrection(): String
+assignCorrection(correction: String): Correction
+assignScore(score: int): int
}

class Correct{
+assignScore(score: int): int
}

class Incorrect{
assignScore(score: int): int
}

class Player{
-name: String
-score: Score
+Player(name: String, initialScore: int)
+getName(): String
+getScore(): int
+setScore(newScore: int)
+answer(question: Question): ArrayList<Answer>
+answer(question: Question, chosenOption: String): ArrayList<Answer>
+assignScore(correction: Correction, newScore: int)
+equals(aPlayer: Player): boolean
}

Question --> Answer:*
Question ..> Player

Answer ..> Question
Answer ..> Player
Answer --> Correction:1

Correction <<Abstract>>

Correct --|> Correction
Incorrect -|> Correction

@enduml