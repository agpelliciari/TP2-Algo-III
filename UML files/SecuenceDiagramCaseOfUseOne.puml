@startuml
title: A true/false question receives a list of answers and assigns points to those who answered correctly

actor testCaseOne
participant "question:TrueOrFalse" as question
participant "mode: ClassicMode" as type
participant "content: Content" as content
participant "aPlayer:Player" as player
participant "answer:Answer" as answer
participant ":AnswerFactory" as factory

create content
testCaseOne -> content:new("GENERAL KNOWLEDGE", "Uba is the...")
create type
testCaseOne -> type: new()
create question
testCaseOne -> question: new(content, mode, List<Answer>)

loop for each player
create player
testCaseOne -> player: new(name, score)

testCaseOne -> player: answer(question, chosenOption)
activate player
player -> question: createAnswer(chosenOption)
activate question
question -> factory: createAnswer(question, chosenOption)
activate factory
create answer
factory -> answer: new()
factory -> factory: answers.add(answer)
factory --> question: answers
deactivate factory
question --> player: answers
player -> question: choiceOption(answers, aPlayer)

loop for each answer
question -> answer: assignPlayer(aPlayer)
activate answer
answer -> answer: player = aPlayer
end loop
deactivate answer
question --> player: answers
player --> testCaseOne: answers
deactivate player
testCaseOne -> testCaseOne: playerAnswers.put(aPlayer, answers)
end loop
@enduml

loop for char in chosenOption: chosenOptions.toCharArray
    loop for option in options
        question -> answer: equals(chosenOption)
        activate answer
        question <<-- answer: true -> chosenAnswers.add(option)
        note left: ArrayList<Answer> chosenAnswers
        end loop
end loop