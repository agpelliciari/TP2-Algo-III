@startuml

skinparam monochrome true
hide circle
skinparam classAttributeIconSize 0

title: Model of classes that interact with Game

class Game{
-maxScore: int
+{static}Game(questions: ArrayList<Question>, maxScore: int, panel: Panel)
+start(numberOfPlayers: int)
+selectPlayers(numberOfPlayers: int): ArrayList<Player>
+registerUser(players: ArrayList<Player>, aPlayer: Player)
}

class Panel{
+show(aQuestion: Question)
}

abstract class Question{
-options: List<Answer>
-content: Content
+{static}Question(content: Content, mode: Mode, answers: List<Answer>)
+getNumberOfCorrectAnswers(List<Answer> answers): int
+getNumberOfIncorrectAnswers(List<Answer> answers): int
+hasNoIncorrectAnswers(ArrayList<Answer> answers): boolean
+assignScore(playersAnswers: HashMap<Player, ArrayList<Answer>>)
+choiceOption(chosenOptions: String): ArrayList<Answer>
}

class Player{
-name: String
-score: Score
+{static}Player(name: String, initialScore: int)
+answer(question: Question): ArrayList<Answer>
+assignScore(correction: Correction, newScore: int)
+equals(aPlayer: Player): boolean
}

class InvalidNumberOfPlayersException{}

class UserNameAlreadyExistsException{}

Game *- Panel:1
Game --> Question:1..*
Game ..> Player:1..*

Question <<Abstract>>
InvalidNumberOfPlayersException <<Exception>>
UserNameAlreadyExistsException <<Exception>>

Game ..> InvalidNumberOfPlayersException: <<instantiates>>
Game ..> UserNameAlreadyExistsException: <<instantiates>>


@enduml